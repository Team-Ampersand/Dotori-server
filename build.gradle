plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //querydsl
	// *** Q-Type error *** //
	id "io.franzbecker.gradle-lombok" version "3.0.0"
}

group = 'com.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// *** spring starter *** //
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // data jpa
	implementation 'org.springframework.boot:spring-boot-starter-security' // security
	implementation 'org.springframework.boot:spring-boot-starter-validation' // validation
	implementation 'org.springframework.boot:spring-boot-starter-web' // starter web

	// *** h2 *** //
	runtimeOnly 'com.h2database:h2'

	// *** lombok *** //
	implementation 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'

	// *** test *** //
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// *** swagger *** //
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	// *** redis *** //
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' //redis

	// *** 다국어 처리를 위한 yaml-resource-bundle *** //
	implementation 'net.rakugakibox.util:yaml-resource-bundle:1.2'

	// *** ModelMapper *** //
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

	// *** JsonWebToken *** //
	implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'

	// *** Email *** //
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// *** QueryDsl *** //
	implementation 'com.querydsl:querydsl-jpa'
}

test {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝