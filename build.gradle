plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //querydsl
	// *** Q-Type error *** //
	id "io.franzbecker.gradle-lombok" version "3.0.0"
	id 'jacoco' // jacoco
}

group = 'com.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// *** spring starter *** //
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // data jpa
	implementation 'org.springframework.boot:spring-boot-starter-security' // security
	implementation 'org.springframework.boot:spring-boot-starter-validation' // validation
	implementation 'org.springframework.boot:spring-boot-starter-web' // starter web

	// *** h2, MariaDB *** //
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client'

	// *** lombok *** //
	implementation 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'

	// *** test *** //
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// *** swagger *** //
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	// *** 다국어 처리를 위한 yaml-resource-bundle *** //
	implementation 'net.rakugakibox.util:yaml-resource-bundle:1.2'

	// *** ModelMapper *** //
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

	// *** JsonWebToken *** //
	implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'

	// *** QueryDsl *** //
	implementation 'com.querydsl:querydsl-jpa'

	// *** XSS 처리를 위한 dependency *** //
	implementation 'org.apache.commons:commons-lang3'
	implementation 'org.apache.commons:commons-text:1.9'

	// *** AWS SES *** ///
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: '1.11.227'

	// *** AWS CloudWatch Log *** //
	implementation 'ca.pjer:logback-awslogs-appender:1.6.0'

	// *** Spring Cloud *** //
	implementation("org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE")
}

test {
	jacoco {
		enabled = true
		destinationFile = file("$buildDir/jacoco/${name}.exec")
		includes = []
		excludes = []
		excludeClassLoaders = []
		includeNoLocationClasses = false
		sessionId = "<auto-generated value>"
		dumpOnExit = true
		classDumpDir = null
		output = JacocoTaskExtension.Output.FILE
		address = "localhost"
		port = 6300
		jmx = false
	}
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

// jacoco
jacoco {
	toolVersion = '0.8.5'
}

jacocoTestReport {
	reports {
		html.enabled true // "/build/reports/jacoco/test/html/index.html"
		csv.enabled false
		xml.enabled false
	}
	afterEvaluate {
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/exception/**' // 테스트 커버리지 측정 대상에서 제거
					,'**/dto/**' // 테스트 커버리지 측정 대상에서 제거
					,'**/Dotori/DotoriApplication*'
					,'**/Dotori/**/Q*' // Qclass 테스트 커버리지 측정 대상에서 제거
			])
		})
	}
	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			// 룰을 on 여부
			enabled = true

			// 룰을 check 단위 (패키지 번들)
			element = 'BUNDLE'

			limit {
				counter = 'INSTRUCTION' // Java 바이트코드 명령 수
				value = 'COVEREDRATIO' // 커버된 비율
				minimum = 0.50 // 50%
			}
		}
	}
}